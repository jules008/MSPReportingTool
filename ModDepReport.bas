Attribute VB_Name = "ModDepReport"
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Generated by Brian Muxworthy - September 2014
''
'' Copyright 2014 Cognizant - Do not distribute or copy without permission
'' Cognizant Proprietary
'' Toolset: Plan Reporting Toolkit
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub DepReport()

'
    Dim LastRow As Integer
    Dim level As Integer
    Dim tsk, tsk2 As Task
    Dim tdeps As TaskDependencies
    Dim tdep As TaskDependency
    Dim objxl As Application
    Dim projfn As MSProject.Application
    Dim wstream As Boolean
    Dim objproj As Object
    Dim holrange As Range
    Dim donfound, benfound As Boolean

    Dim donBL, donFC, benBL, benFC, testdate As Date
        
' Application.DisplayAlerts = False
    
'

' set the holiday range value from the holidays sheet

' Sheets("Holidays").Activate
   
'RowCount = Worksheets("Holidays").Range("A1").End(xlDown).Row
'
'Set holrange = Range(Worksheets("Holidays").Cells(2, 1), Worksheets("Holidays").Cells(2, 1).Cells(RowCount, 1))
'
'select MSProject Files
dummyval = MsgBox("This macro updates the dependencies log based on the plan selected" & Chr(10) & _
            Chr(10) & "Please select the plan to be used")
            
Application.FileDialog(msoFileDialogFilePicker).AllowMultiSelect = True
Application.FileDialog(msoFileDialogFilePicker).Title = "Select MS Project Files"
Application.FileDialog(msoFileDialogFilePicker).Filters.Clear
Application.FileDialog(msoFileDialogFilePicker).Filters.Add "MS Project Files", "*.mpp", 1
Application.FileDialog(msoFileDialogFilePicker).ButtonName = "Select"
Application.FileDialog(msoFileDialogFilePicker).Show

If Application.FileDialog(msoFileDialogFilePicker).SelectedItems.Count = 0 Then
    
    MsgBox ("No files selected for analysis")
    If Error = 1 Then GoTo Err1:
    Exit Sub
'
End If

Set objproj = CreateObject("MSProject.Application")
objproj.Visible = False
objproj.DisplayAlerts = False
Application.ScreenUpdating = False
startrow = 4
updateRow = 4
donfound = False
benfound = False

'loop files

For Each SelectedFilename In Application.FileDialog(msoFileDialogFilePicker).SelectedItems

    objproj.FileOpen Name:=SelectedFilename, ReadOnly:=True
    
    ProgName = objproj.ActiveProject.BuiltinDocumentProperties("Subject")
    ProjName = objproj.ActiveProject.BuiltinDocumentProperties("Title")

Sheets("Dep_Log").Select
   
' first clear existing data

If Range("C4").Value = "" Then
    end_row = 0
ElseIf Range("C5").Value = "" Then
    end_row = 4
Else
    end_row = Range("C4").End(xlDown).Row
End If

If end_row <> 0 Then
    Rows("4:" & end_row).Select
    Selection.Delete Shift:=xlUp
End If

statustxt = Format(objproj.ActiveProject.statusdate, "dd/mm/yyyy")

Range("A1").Value = "Stream E Dependency Report (Status: " & statustxt & ")"

' display status box

    fname = objproj.ActiveProject.Name
       
' loop tasks to find beneficiary dependencies

For Each tsk In objproj.ActiveProject.Tasks
    
    If Not tsk Is Nothing And tsk.milestone = True Then
            
        If tsk.Text23 <> "" And tsk.flag18 = True Then ' there is an ID and dep in flag set
            donfound = False
            For Each tsk2 In objproj.ActiveProject.Tasks
                    
                If tsk2.Text23 = tsk.Text23 And tsk2.flag19 = True Then ' codes match and dep out flag set
                
                        donfound = True
                        
                        pnt1 = "Dependency found: " & tsk2.Text23
                        
                        currdonproj = tsk2.Text8
                    
                        startpos = InStr(1, currdonproj, ".", vbTextCompare)
                        If startpos > 0 Then
                            newdonproj = Mid(currdonproj, startpos + 2, Len(currdonproj))
                        Else
                            newdonproj = currdonproj
                        End If
                        
                        pnt2 = "Donor Project: " & newdonproj & ", Milestone: " & tsk2.Name
                        
                        currbenproj = tsk.Text8
                    
                        startpos = InStr(1, currbenproj, ".", vbTextCompare)
                        If startpos > 0 Then
                            newbenproj = Mid(currbenproj, startpos + 2, Len(currbenproj))
                        Else
                            newbenproj = currbenproj
                        End If
                                                
' donor details in first section

                        Sheets("Dep_Log").Range("A" & updateRow).Value = tsk2.Text23
                        Sheets("Dep_Log").Range("B" & updateRow).Value = tsk2.number1
                        Sheets("Dep_Log").Range("C" & updateRow).Value = newdonproj
                        Sheets("Dep_Log").Range("D" & updateRow).Value = tsk2.Name
                        Sheets("Dep_Log").Range("E" & updateRow).Value = Format(tsk2.BaselineFinish, "dd mmm yy")
                        Sheets("Dep_Log").Range("F" & updateRow).Value = Format(tsk2.finish, "dd mmm yy")
                        Sheets("Dep_Log").Range("G" & updateRow).Value = tsk2.Text22
                    
' beneficiary details in second section

                        Sheets("Dep_Log").Range("H" & updateRow).Value = tsk.number1
                        Sheets("Dep_Log").Range("I" & updateRow).Value = newbenproj
                        Sheets("Dep_Log").Range("J" & updateRow).Value = tsk.Name
                        Sheets("Dep_Log").Range("K" & updateRow).Value = tsk.Text23
                        Sheets("Dep_Log").Range("L" & updateRow).Value = Format(tsk.BaselineFinish, "dd mmm yy")
                        Sheets("Dep_Log").Range("M" & updateRow).Value = Format(tsk.finish, "dd mmm yy")
                        Sheets("Dep_Log").Range("N" & updateRow).Value = tsk.Text22
                        
                        Sheets("Dep_Log").Range("Q" & updateRow).Value = 0
                        Sheets("Dep_Log").Range("U" & updateRow).Value = 0
                        Sheets("Dep_Log").Range("V" & updateRow).Value = tsk2.TotalSlack / 480
                        Sheets("Dep_Log").Range("W" & updateRow).Value = tsk.TotalSlack / 480
                        
                        updateRow = updateRow + 1
                        Exit For
            
                End If ' code and flag test
                        
            Next tsk2 ' search for donor
            
            If donfound = False Then ' no donor for this beneficiary
            
' beneficiary details in second section

                pnt1 = "Unmatched dependency - no donor found: " & tsk.Text23
                
                currbenproj = tsk.Text8
                    
                startpos = InStr(1, currbenproj, ".", vbTextCompare)
                If startpos > 0 Then
                    newbenproj = Mid(currbenproj, startpos + 2, Len(currbenproj))
                Else
                    newbenproj = currbenproj
                End If
                
                Sheets("Dep_Log").Range("H" & updateRow).Value = tsk.number1
                
                Sheets("Dep_Log").Range("I" & updateRow).Value = newbenproj
                Sheets("Dep_Log").Range("J" & updateRow).Value = tsk.Name
                Sheets("Dep_Log").Range("K" & updateRow).Value = tsk.Text23
                Sheets("Dep_Log").Range("L" & updateRow).Value = Format(tsk.BaselineFinish, "dd mmm yy")
                Sheets("Dep_Log").Range("M" & updateRow).Value = Format(tsk.finish, "dd mmm yy")
                Sheets("Dep_Log").Range("N" & updateRow).Value = tsk.Text22
                        
                Sheets("Dep_Log").Range("Q" & updateRow).Value = 0
                Sheets("Dep_Log").Range("U" & updateRow).Value = 0
                Sheets("Dep_Log").Range("V" & updateRow).Value = 0
                Sheets("Dep_Log").Range("W" & updateRow).Value = tsk.TotalSlack / 480
            
                Sheets("Dep_Log").Range("D" & updateRow).Value = "N/A"
                updateRow = updateRow + 1
            
            End If
            
        End If ' code and flag test
                   
    End If ' task is nothing
        
Next tsk

' now search for no beneficiary for a donor

For Each tsk In objproj.ActiveProject.Tasks

    If Not tsk Is Nothing And tsk.milestone = True Then
            
        If tsk.Text23 <> "" And tsk.flag19 = True Then ' there is an ID and dep out flag set
            benfound = False
            For Each tsk2 In objproj.ActiveProject.Tasks
                    
                If tsk2.Text23 = tsk.Text23 And tsk2.flag18 = True Then ' codes match and dep out flag set
                
                    benfound = True
                    Exit For
                        
                End If ' code and flag test
                        
            Next tsk2 ' search for donor
            
            If benfound = False Then ' no beneficiary for this donor
            
' donor details in first section

                pnt1 = "Unmatched dependency - no beneficiary: " & tsk.Text23
                
                currdonproj = tsk.Text8
                
                startpos = InStr(1, currdonproj, ".", vbTextCompare)
                If startpos > 0 Then
                    newdonproj = Mid(currdonproj, startpos + 2, Len(currdonproj))
                Else
                    newdonproj = currdonproj
                End If
                
                Sheets("Dep_Log").Range("A" & updateRow).Value = tsk.Text23
                Sheets("Dep_Log").Range("B" & updateRow).Value = tsk.number1
                Sheets("Dep_Log").Range("C" & updateRow).Value = newdonproj
                Sheets("Dep_Log").Range("D" & updateRow).Value = tsk.Name
                Sheets("Dep_Log").Range("E" & updateRow).Value = Format(tsk.BaselineFinish, "dd mmm yy")
                Sheets("Dep_Log").Range("F" & updateRow).Value = Format(tsk.finish, "dd mmm yy")
                Sheets("Dep_Log").Range("G" & updateRow).Value = tsk.Text22
            
                Sheets("Dep_Log").Range("J" & updateRow).Value = "N/A"
                
                updateRow = updateRow + 1
            
            End If
            
        End If ' code and flag test
                   
    End If ' task is nothing
        
Next tsk
    
    objproj.fileclose (False)
    
Next SelectedFilename

' insert date diff and comments columns

endrow = updateRow - 1
Range("X1").Value = endrow

For j = 4 To endrow

    If Cells(j, 4) = "N/A" Or Cells(j, 10) = "N/A" Then ' these are not matched dependencies so put at top of report
    
        If Mid(Cells(j, 11), 1, 3) = "EXT" Then ' external dependency drive status from beneficiary RAG
        
            benRAG = Cells(j, 14)
            If benRAG = "RED" Then
                FCcomment = "HIGH RISK: External Dependency has RED RAG"
                Sortval = 1
            ElseIf benRAG = "AMBER" Then
                FCcomment = "MODERATE RISK: External Dependency has AMBER RAG"
                Sortval = 2
            ElseIf benRAG = "GREEN" Then
                FCcomment = "LOW RISK: External Dependency has GREEN RAG"
                Sortval = 3
            Else ' complete
                FCcomment = "COMPLETE"
                Sortval = 5
            End If
        
        Else
            Sortval = -1
            BLcomment = "Unmatched dependency"
            FCcomment = "Fix in the plan"
        End If

    Else
    
    If IsDate(Cells(j, 5)) Then
        donBL = CDate(Cells(j, 5))
    Else
        donBL = 0
    End If
    If IsDate(Cells(j, 6)) Then
        donFC = CDate(Cells(j, 6))
    Else
        donFC = 0
    End If
    If IsDate(Cells(j, 12)) Then
        benBL = CDate(Cells(j, 12))
    Else
        benBL = 0
    End If
    If IsDate(Cells(j, 13)) Then
        benFC = CDate(Cells(j, 13))
    Else
        benFC = 0
    End If

    leadlag = Cells(j, 17)

    donRAG = Cells(j, 7)
    benRAG = Cells(j, 14)
    donfloat = Cells(j, 22)
    benFLOAT = Cells(j, 23)

    If donBL <> 0 And benBL <> 0 Then
        BLdatediff = WorksheetFunction.NetworkDays(donBL, benBL, holrange) + leadlag
    Else
        BLdatediff = 0
    End If
    
    If donFC <> 0 And benFC <> 0 Then
        FCdatediff = WorksheetFunction.NetworkDays(donFC, benFC) + leadlag
    Else
        FCdatediff = 0
    End If
    
    If donBL <> 0 And donFC <> 0 Then
        donvariance = WorksheetFunction.NetworkDays(donBL, donFC, holrange) ' finish variance if >0 then later than BL
    Else
        donvariance = 0
    End If
    If benBL <> 0 And benFC <> 0 Then
        benvariance = WorksheetFunction.NetworkDays(benBL, benFC, holrange) ' finish variance if >0 then later than BL
    Else
        benvariance = 0
    End If
 
    Call adjust(BLdatediff)
    Call adjust(FCdatediff)
    Call adjust(donvariance)
    Call adjust(benvariance)

    Cells(j, 18) = BLdatediff
    Cells(j, 19) = FCdatediff


If Cells(j, 7) = "COMPLETE" Then ' if donor is complete

    FCcomment = "COMPLETE"

Else

    If benRAG <> "COMPLETE" Then
    
        If FCdatediff < 0 Then ' forecast for donor is later than beneficiary - dependency conflict
        
            daysdelay = FCdatediff * (-1)
            FCcomment = "MAJOR ISSUE: Donor is forecast " & daysdelay & " days later than beneficiary"
            Sortval = 0
    
        ElseIf FCdatediff > 0 Then ' there is float in the plan for these
        
            FCcomment = "LOW RISK: Dependency has " & FCdatediff & " days float"
            Sortval = 4
        
        ElseIf donRAG = "RED" And FCdatediff = 0 Then
        
            FCcomment = "HIGH RISK: No float and donor is RED"
            Sortval = 1
        
        ElseIf donRAG = "AMBER" And FCdatediff = 0 Then
        
            FCcomment = "MODERATE RISK: No float and donor is AMBER"
            Sortval = 2
            
        ElseIf donRAG = "GREEN" And FCdatediff = 0 Then
            
            FCcomment = "LOW/MODERATE RISK: No float and donor is GREEN"
            Sortval = 3
        
        Else
    
            FCcomment = "Dont know"
            Sortval = 5
    
        End If
        
    Else
    
        FCcomment = "Invalid dependency"
    
    End If
    
End If

If donBL = 0 Or benBL = 0 Then

    BLcomment = "Donor and/or beneficiary has no Baseline date"

ElseIf BLdatediff < 0 Then

    BLcomment = "Alignment Issue"
    
ElseIf BLdatediff = 0 Then

    BLcomment = "Aligned"
    
Else

    BLcomment = "Donor BL earlier than Beneficiary"

End If

Cells(j, 20) = Cells(j, 1) & "-" & Cells(j, 11)

End If ' unmatched test

Cells(j, 24) = Sortval

Cells(j, 15) = BLcomment

Cells(j, 16) = FCcomment

Cells(j, 16).Select

If Sortval <= 1 Then ' red
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
ElseIf Sortval = 2 Then ' amber
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
Else ' green
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 5287936
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End If

Next j

' now sort the rows into priority order (Status, Forecast for donor, IPO code)

Rows(startrow & ":" & endrow).Select
' Range(Selection, Selection.End(xlDown)).Select
ActiveWorkbook.Worksheets("Dep_Log").Sort.SortFields.Clear

ActiveWorkbook.Worksheets("Dep_Log").Sort.SortFields.Add Key:=Range( _
        "X" & startrow & ":X" & endrow), SortOn:=xlSortOnValues, Order:=xlAscending, _
        DataOption:=xlSortNormal

ActiveWorkbook.Worksheets("Dep_Log").Sort.SortFields.Add Key:=Range("F" & startrow & ":F" & endrow _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal

ActiveWorkbook.Worksheets("Dep_Log").Sort.SortFields.Add Key:=Range("K" & startrow & ":K" & endrow _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        
    With ActiveWorkbook.Worksheets("Dep_Log").Sort
        .SetRange Range("A4:X" & endrow)
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

    Columns("D:D").Select
    With Selection
        .WrapText = True
        .Orientation = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With
    Columns("J:J").Select
    With Selection
        .WrapText = True
        .Orientation = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
    End With

Range("A4:W" & endrow).Select
    With Selection.Font
        .Name = "Calibri"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .TintAndShade = 0
        .Bold = False
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection
        .VerticalAlignment = xlCenter
        .Orientation = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    Range("C4:D" & endrow).Select
    With Selection
        .IndentLevel = 1
    End With
    Range("I4:J" & endrow).Select
    With Selection
        .IndentLevel = 1
    End With
    
' Hide unwanted columns for report

'    Columns("D:D").EntireColumn.Hidden = True
'    Columns("K:K").EntireColumn.Hidden = True
'    Columns("Q:X").EntireColumn.Hidden = True

Application.ScreenUpdating = True

MsgBox ("Download complete: " & updateRow - 4 & " dependencies added to the dependencies log")


Exit Sub

errorH:

Sheets("Dep_Log").Select
Range("A1").Select
Application.ScreenUpdating = True
MsgBox "Error importing schedules"
Error = 1
'
Err1:
'
End Sub

Public Sub adjust(val)

If val < 0 Then

    val = val + 1

ElseIf val > 0 Then

    val = val - 1

End If

End Sub

